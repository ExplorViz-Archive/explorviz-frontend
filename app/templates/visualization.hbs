{{#if showLandscape}}
  {{#if landscapeRepo.latestLandscape.systems}}

    <!-- "ember-composable-helpers addon" array-helper used -->
    <!-- ember component helper allows binding declarations, totally equal to -->
    <!-- compinent that are initiated with braces -->

    {{visualization/page-setup/visualization-navbar
      content=(array 
        (component "visualization/page-setup/navbar/reset-visualization") 
        (component "visualization/page-setup/navbar/toggle-timeline") 
        (component "visualization/page-setup/navbar/file-downloader" 
          urlPath=exportLandscapeUrl fileName=exportLandscapeFileName) 
        (component "visualization/page-setup/navbar/file-uploader" 
          backendURL=uploadLandscapeUrl) 
      )
    }}

    {{visualization/rendering/landscape-rendering latestLandscape=landscapeRepo.latestLandscape}}
  {{else}}
    <div class="container-fluid">
      <div class="jumbotron">
        <h2>No landscape found!</h2>
        <p>A new landscape will be fetched every 10 seconds.</p>
      </div>
      <div id="spinnerDiv" class="container" style="position:relative; height:20%;">
        {{ember-spinner}}
      </div>
    </div>
  {{/if}}

{{else}}
  {{visualization/page-setup/visualization-navbar
    content=(array 
      (component "visualization/page-setup/navbar/reset-visualization") 
      (component "visualization/page-setup/navbar/toggle-timeline") 
      (component "visualization/page-setup/navbar/file-downloader" 
        urlPath=exportLandscapeUrl fileName=exportLandscapeFileName) 
      (component "visualization/page-setup/navbar/application-opener") 
      (component "visualization/page-setup/navbar/application-search")
    )
  }}

  {{visualization/rendering/application-rendering latestApplication=landscapeRepo.latestApplication}}
{{/if}}

{{#if additionalData.showWindow}}
  {{visualization/page-setup/data-selection}}
{{/if}}

{{#if renderingService.showTimeline}}
  {{time-shift}}
{{/if}}

<!-- landscape popups -->
  {{visualization/rendering/landscape-popups/system-popup
     data=additionalData.popupContent}}
  {{visualization/rendering/landscape-popups/nodegroup-popup
      data=additionalData.popupContent}}
  {{visualization/rendering/landscape-popups/node-popup
      data=additionalData.popupContent}}
  {{visualization/rendering/landscape-popups/application-popup
     data=additionalData.popupContent}}

<!-- application popups -->
  {{visualization/rendering/application-popups/component-popup
     data=additionalData.popupContent}}
  {{visualization/rendering/application-popups/clazz-popup
      data=additionalData.popupContent}}
  {{visualization/rendering/application-popups/communication-popup
      data=additionalData.popupContent}}