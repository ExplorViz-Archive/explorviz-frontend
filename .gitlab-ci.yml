image: explorviz/build-images:frontend

cache:
  paths:
    - node_modules/
    - .npm/

stages:
  - code-analysis
  - test
  - build
  - deploy:images
  - deploy:retagging

linting:
  stage: code-analysis
  tags:
    - exec-docker
  before_script:
    - npm install
  script:
    - npm run lint

test:
  stage: test
  tags:
    - exec-docker
  script:
    - npm install
    - ember test --launch chromium

build:
  stage: build
  tags:
    - exec-docker
  script:
    - npm install
    - ember build --prod
  artifacts:
    paths:
      - dist

.deploy-to-dockerhub:
  stage: deploy:images
  tags:
    - exec-docker
  variables:
    DOCKERHUB_TAG: "latest"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${DOCKERHUB_USER}:${DOCKERHUB_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context=$CI_PROJECT_DIR --dockerfile=$CI_PROJECT_DIR/Dockerfile --destination=$DOCKERHUB_ORGA/$DOCKERHUB_IMAGE_NAME:$DOCKERHUB_TAG

deploy-dockerhub-master:
  extends:
    - .deploy-to-dockerhub
  except:
    - schedules
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

deploy-dockerhub-dev:
  extends:
    - .deploy-to-dockerhub
  except:
    - schedules
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
      variables:
        DOCKERHUB_TAG: "dev"
  script:
    - echo "DOCKERHUB_TAG=dev" >> build.env
  artifacts:
    reports:
      dotenv: build.env

deploy-dockerhub-dev-noauth:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    - schedules
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${DOCKERHUB_USER}:${DOCKERHUB_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context=$CI_PROJECT_DIR --dockerfile=$CI_PROJECT_DIR/Dockerfile --destination=$DOCKERHUB_ORGA/$DOCKERHUB_IMAGE_NAME:dev-noauth

retag-dockerhub-image:
  stage: deploy:retagging
  except:
    - schedules
  tags:
    - exec-docker
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "master"
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  script:
    - crane auth login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD "index.docker.io"
    - crane cp $DOCKERHUB_ORGA/$DOCKERHUB_IMAGE_NAME:$DOCKERHUB_TAG $DOCKERHUB_ORGA/$DOCKERHUB_IMAGE_NAME:$CI_COMMIT_SHORT_SHA

retag-dockerhub-image-noauth:
  stage: deploy:retagging
  only:
    - schedules
  tags:
    - exec-docker
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "master"
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  script:
    - crane auth login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD "index.docker.io"
    - crane cp $DOCKERHUB_ORGA/$DOCKERHUB_IMAGE_NAME:$DOCKERHUB_TAG $DOCKERHUB_ORGA/$DOCKERHUB_IMAGE_NAME:dev-noauth-$CI_COMMIT_SHORT_SHA